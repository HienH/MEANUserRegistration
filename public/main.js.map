{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/gaurds/auth.gaurds.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/form.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormService } from '../../services/form.service';\nimport { User } from '../../model/user.model';\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n    user: User;\n    constructor(private formService: FormService) { }\n\n    ngOnInit(): void {\n        this.formService.getProfile().subscribe(profile => {\n            if (profile['success']) {\n                this.user = profile['user']\n            } err => {\n\n                console.log(err);\n            }\n        })\n    }\n\n}\n","<h1> Hello {{user?.name}}</h1>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { FormService } from '../services/form.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private formService: FormService, private router: Router) {\n    }\n\n    canActivate(): boolean {\n        if (this.formService.loggedIn()) {\n            return true;\n        } else {\n            this.router.navigate(['./login'])\n            return false\n        }\n    }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { FormService } from '../../services/form.service';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    submitted: boolean;\n    error: boolean;\n    errorMessage: string;\n\n    constructor(private fb: FormBuilder, private router: Router, private formService: FormService) { }\n\n    ngOnInit(): void {\n        this.createForm();\n    }\n\n    createForm() {\n        this.loginForm = this.fb.group({\n            email: [null, [Validators.required, Validators.email]],\n            password: [null, Validators.required],\n        });\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        if (this.loginForm.valid) {\n            this.formService.loginUser(this.loginForm.value).subscribe(data => {\n                if (data['success']) {\n                    this.formService.storeUserData(data['token'], data['user'])\n                    this.router.navigate(['./home']);\n                } else {\n                    this.error = true;\n                    this.errorMessage = data['msg']\n                }\n            })\n        }\n\n    }\n}\n","<div class=\"container\">\n  <h2> Login</h2>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label>Email:</label>\n      <input class=\"form-control\" formControlName=\"email\" type=\"email\" name=\"email\">\n    </div>\n    <div *ngIf=\"submitted && loginForm.controls['email'].invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"loginForm.controls['email'].errors.required\">\n        Email is required.\n      </div>\n      <div *ngIf=\"loginForm.controls['email'].errors.email\">\n        Please enter a valid Email.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Password:</label>\n      <input class=\"form-control\" formControlName=\"password\" type=\"text\">\n    </div>\n    <div *ngIf=\"submitted && loginForm.controls['password'].invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"loginForm.controls['password'].errors.required\">\n        Password is required.\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-danger\">\n      Login\n    </button>\n  </form>\n  <div *ngIf=\"error\">\n    {{errorMessage}}\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { Router } from \"@angular/router\"\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n    submitted: boolean;\n    error: boolean;\n\n    constructor(private fb: FormBuilder, private formServie: FormService, private router: Router) { }\n\n    ngOnInit(): void {\n        this.createForm();\n        this.submitted = false;\n    }\n\n    createForm() {\n        this.registerForm = this.fb.group({\n            name: [null, Validators.required],\n            username: [null, Validators.required],\n            email: [null, [Validators.required, Validators.email]],\n            password: [null, Validators.required],\n        });\n    }\n\n    onSubmit(): void {\n        this.submitted = true;\n        if (this.registerForm.valid) {\n            this.formServie.registerUser(this.registerForm.value).subscribe(data => {\n                if (data['success']) {\n                    this.router.navigate(['./login']);\n                } else {\n                    this.error = true;\n                }\n            })\n        }\n        console.log(this.registerForm.value)\n    }\n\n}\n","<div class=\"container\">\n  <h2> Register</h2>\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label>Name:</label>\n      <input class=\"form-control\" formControlName=\"name\" type=\"text\">\n    </div>\n    <div *ngIf=\"submitted && registerForm.controls['name'].invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"registerForm.controls['name'].errors.required\">\n        Name is required.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Username:</label>\n      <input class=\"form-control\" formControlName=\"username\" type=\"text\">\n    </div>\n    <div *ngIf=\"submitted && registerForm.controls['username'].invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"registerForm.controls['username'].errors.required\">\n        Username is required.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Email:</label>\n      <input class=\"form-control\" formControlName=\"email\" type=\"email\" name=\"email\">\n    </div>\n    <div *ngIf=\"submitted && registerForm.controls['email'].invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"registerForm.controls['email'].errors.required\">\n        Email is required.\n      </div>\n      <div *ngIf=\"registerForm.controls['email'].errors.email\">\n        Please enter a valid Email.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Password:</label>\n      <input class=\"form-control\" formControlName=\"password\" type=\"text\">\n    </div>\n    <div *ngIf=\"submitted && registerForm.controls['password'].invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"registerForm.controls['password'].errors.required\">\n        Password is required.\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-danger\">\n      Register\n    </button>\n  </form>\n  <div *ngIf=\"error\">\n    Something went wrong, try again another time\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormService } from './services/form.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from './gaurds/auth.gaurds';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavbarComponent,\n        HomeComponent,\n        RegisterComponent,\n        LoginComponent\n    ],\n    imports: [\n        BrowserModule,\n        CommonModule,\n        AppRoutingModule,\n        ReactiveFormsModule,\n        HttpClientModule\n    ],\n    providers: [FormService, AuthGuard],\n    bootstrap: [AppComponent]\n})\n\n\n\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormService } from '../../services/form.service';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: './navbar.component.html',\n    styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n    constructor(private formService: FormService) { }\n\n    ngOnInit(): void {\n    }\n\n    logout(): void {\n        this.formService.logout();\n    }\n\n    isLoggedIn(): boolean {\n        return this.formService.loggedIn();\n    }\n}\n","<nav class=\"navbar navbar-light bg-light\">\n  <ul class=\"nav\">\n\n    <li *ngIf=\"!isLoggedIn()\" class=\"nav-item\">\n      <a class=\"nav-link active\" routerLinkActive=\"['active']\" [routerLinkActiveOptions]=\"{exact:\n        true}\" routerLink=\"login\">Login</a>\n    </li>\n    <li *ngIf=\"!isLoggedIn()\" class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"register\">Register</a>\n    </li>\n    <li *ngIf=\"isLoggedIn()\" class=\"nav-item\"><a class=\"nav-link\" routerLink=\"home\">Home</a>\n    </li>\n    <li *ngIf=\"isLoggedIn()\" class=\"nav-item\"><a class=\"nav-link\" href=\"#\" (click)=\"logout()\">Logout</a>\n    </li>\n  </ul>\n\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormService {\n\n    authToken: string;\n\n    constructor(private http: HttpClient) { }\n\n    registerUser(user) {\n        let headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this.http.post('user/register', user, { headers: headers });\n    }\n\n    loginUser(user) {\n        let headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this.http.post('user/authenticate', user, { headers: headers });\n    }\n\n    storeUserData(token, user) {\n        localStorage.setItem('jwt', token);\n        localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    logout() {\n        this.authToken = null;\n        localStorage.clear()\n    }\n\n    getProfile() {\n\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n            Authorization: this.getToken()\n        });\n        return this.http.get('user/profile', { headers: headers })\n    }\n\n    getToken() {\n        return localStorage.getItem('jwt')\n    }\n\n    loggedIn(): boolean {\n        const helper = new JwtHelperService();\n        let token = localStorage.getItem('jwt')\n        if (token) {\n            console.log('token')\n            return !helper.isTokenExpired(token.split(' ')[1]);\n        } else false;\n    }\n}   \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthGuard } from './gaurds/auth.gaurds';\nconst routes: Routes = [\n    { path: 'login', component: LoginComponent },\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\n    { path: 'register', component: RegisterComponent },\n    { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}